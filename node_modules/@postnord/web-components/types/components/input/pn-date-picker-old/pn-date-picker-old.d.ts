import { EventEmitter } from '../../../stencil-public-runtime';
export declare class PnDatePickerOld {
  hostElement: HTMLElement;
  /** Event fired when date is changed */
  datechange: EventEmitter;
  /** Event fired when the month/year is changed */
  monthchanged: EventEmitter;
  /** Event fired when there is data error */
  dateerror: EventEmitter;
  /** Supported languages: "en", "sv", "da", "fi", "no"  */
  language: string;
  /** Disable the date picker if set to true */
  disabled: boolean;
  /** Will fire error event if set to true  */
  emitErrors: boolean;
  /** Label of the date picker  */
  label: string;
  /** Minimum date in 'yyyy-mm-dd' format */
  min: string;
  /** Maximum date in 'yyyy-mm-dd' format */
  max: string;
  /** Display red border if set to true */
  invalid: boolean;
  /** Set this to true to disable weekends */
  disableWeekends: boolean;
  /** Set specific days to be disabled 'yyyy-mm-dd' format separated by comma*/
  disableDays: string;
  /** Set this to true to disable direct input in the field */
  disableInput: boolean;
  /** Value could be 0-6 where 0 is sunday */
  startOfWeek: number;
  /** Will fire datechange event on blur if set to true  */
  dispatchChangeOnBlur: boolean;
  /** Set date picker position Ex. "top left", "bottom right" */
  position: string;
  /** Default date value in 'yyyy-mm-dd' format */
  value: string;
  view: string;
  selectedDate: Date;
  minDate: Date;
  maxDate: Date;
  monthSelection: number;
  yearSelection: number;
  currentCalendarDate: Date;
  hasValidDate: boolean;
  inputElement: HTMLInputElement;
  calendarContainer: HTMLDivElement;
  monthElement: HTMLSpanElement;
  isInit: boolean;
  isOpen: boolean;
  componentWillLoad(): void;
  componentDidLoad(): void;
  componentWillUpdate(): void;
  _initMinAndMaxDates(): void;
  dateChanged(event: any): void;
  parseSelectedDateFromValue(value: any): void;
  private _updateClassStates;
  openDatepicker(): void;
  closeDatepicker(): void;
  private _onClickOutside;
  private _addLeadingZero;
  private _updateHasInputClass;
  onMonthChanged(event: CustomEvent): void;
  render(): any;
}
