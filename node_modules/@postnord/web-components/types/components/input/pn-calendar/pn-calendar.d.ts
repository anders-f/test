import { EventEmitter } from '../../../stencil-public-runtime';
export declare class PnCalendar {
  hostElement: HTMLElement;
  /** Event fired when date is changed */
  daychange: EventEmitter;
  /** Event fired when the month/year is changed */
  monthchanged: EventEmitter;
  /** Event fired when the user selects the same day */
  sameday: EventEmitter;
  /** Event fired when the view is changed. */
  viewchange: EventEmitter;
  /** Supported languages: "en", "sv", "da", "fi", "no"  */
  language: string;
  /** Minimum date in 'yyyy-mm-dd' format */
  min: string;
  /** Maximum date in 'yyyy-mm-dd' format */
  max: string;
  /** Value could be 0-6 where 0 is sunday */
  startOfWeek: number;
  /** Default date value in 'yyyy-mm-dd' format */
  value: string;
  /** Set this to true to disable weekends */
  disableWeekends: boolean;
  /** Set specific days to be disabled 'yyyy-mm-dd' format separated by comma*/
  disableDays: string;
  /** Set the minimum active date. Note: Requires maxActiveDate to be set. */
  minActiveDate: string;
  /** Set the maximum active date. Note: Requires minActiveDate to be set. */
  maxActiveDate: string;
  /** Default date to draw on load. */
  defaultDate: string;
  /** Disable months view. */
  disableMonthsView: boolean;
  /** Force display the months view. */
  monthView: boolean;
  allDisabledDays: Array<number>;
  view: string;
  selectedDate: Date;
  minDate: Date;
  maxDate: Date;
  monthSelection: number;
  yearSelection: number;
  currentCalendarDate: Date;
  calendarContainer: HTMLDivElement;
  monthElement: HTMLSpanElement;
  componentWillLoad(): void;
  componentDidLoad(): void;
  componentWillUpdate(): void;
  componentDidUpdate(): void;
  _initMinAndMaxDates(): void;
  parseSelectedDateFromValue(value: any): void;
  parseDisabledDays(value: string): void;
  toggleView(): string;
  changeView(view: any): void;
  private _drawCalendar;
  private _drawCalendarMonths;
  private _dateWithNoHms;
  private _drawCalendarDays;
  private _selectMonth;
  private _selectDate;
  private _addLeadingZero;
  private _daysInMonth;
  private _addOrSubMonthYear;
  private _previousMonth;
  private _nextMonth;
  render(): any;
}
