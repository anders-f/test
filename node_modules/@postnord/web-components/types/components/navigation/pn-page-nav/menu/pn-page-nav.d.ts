import { EventEmitter } from '../../../../stencil-public-runtime';
export declare class PnPageNav {
  /** Currently active menu item value */
  value: string;
  currentSelection: HTMLElement;
  showScrollArrows: boolean;
  showLeftArrow: boolean;
  showRightArrow: boolean;
  dropdownOpen: boolean;
  hostElement: HTMLElement;
  navContainer: HTMLElement;
  navWrapper: HTMLElement;
  navItems: Array<any>;
  activeBg: HTMLElement;
  hoverBg: HTMLElement;
  scrollRegistered: boolean;
  /** Pass a string which will be the text on the dropdown button.
   *  Keep in mind that the dropdown items are passed as slots
   * (<pn-page-nav-dropdown-item />). */
  dropdown: string | boolean;
  /** Emitted when active value changes */
  navchange: EventEmitter;
  private mo?;
  changeHandler({ target }: {
    target: any;
  }): void;
  handleResize(): void;
  valueHandler(): void;
  componentWillLoad(): void;
  componentDidLoad(): void;
  setActiveNavItem(): void;
  rerender(): void;
  calcHighlight(el: HTMLElement, bgEl: HTMLElement): void;
  scrollArrowRender(): void;
  scroll(val: any): void;
  scrollArrowClasses(): string;
  dropdownButton: HTMLElement;
  dropdownEl: HTMLElement;
  dropdownItems: Array<HTMLElement>;
  dropdownEls: Array<any>;
  dropdownLinks: Array<String>;
  dropdownActive: boolean;
  initiateDropdown(): void;
  toggleDropdown(): void;
  isDropdownItemActive(): void;
  dropdownHandler(): void;
  addDropdownEventListeners(): void;
  addGlobalEventListeners(): void;
  removeGlobalEventListeners(): void;
  keyboardEvents(e: KeyboardEvent): void;
  globalEvents(e: any): void;
  eventHandler: any;
  globalEventHandler: any;
  focusNextDropdownItem(): void;
  focusPrevDropdownItem(): void;
  dropdownButtonClasses(): string;
  dropdownClasses(): string;
  render(): any;
}
