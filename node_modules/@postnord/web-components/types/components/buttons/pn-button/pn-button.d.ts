export declare class PnButton {
  /** small, bool */
  small?: boolean;
  /** Button type, dark(blue background), light(white background), warning(destructive actions) */
  appearance?: string;
  /** Altering the button style, options are: 'outlined' (bordered button with no background) or 'borderless' (borderless button with no background, mostly used for links) */
  variant?: string;
  /** Loading indicator */
  loading?: boolean;
  /** Icon on the left side instead of on the right */
  leftIcon?: boolean;
  icon?: string;
  type?: string;
  /** If you're using a button with only an icon, button text is still REQUIRED for the tooltip */
  iconOnly: boolean;
  ariaLabel: string;
  ariaLabelledby?: string;
  ariaControls?: string;
  ariaPressed: string;
  /** Pass an href to make the button into link (a-tag) */
  href?: string;
  rel?: string;
  target?: string;
  download?: boolean;
  form?: string;
  hostElement: HTMLElement;
  linkEl: HTMLElement;
  componentDidLoad(): void;
  tooltipOpen: boolean;
  tooltipUpwards: boolean;
  tooltipEl: HTMLDivElement;
  tooltipDx: string;
  openHandler(): void;
  initTooltip(): void;
  setTooltipOffset(): void;
  checkTooltipPosition(): void;
  checkIfLink(): void;
  ripple: (e: any, el: any) => void;
  getClassNames(): string;
  getAttributes(): {
    type: string;
  } | {
    href: string;
    rel: string;
    target: string;
    download: boolean;
  };
  getTagName(): "button" | "a";
  render(): any;
}
