import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';
import { c as colors } from './colors.js';

const pnColorsCss = ".colors{padding:3em 2em;max-width:100rem;margin:auto}.palette-container{width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-line-pack:center;align-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.palette-container .color-palette{-ms-flex:1;flex:1;margin:1em}.palette-container .color-palette .color-swatch{width:100px;height:100px;-webkit-box-shadow:1px 2px 4px #f3f2f2;box-shadow:1px 2px 4px #f3f2f2}.palette-container .color-palette .color-name{-ms-flex-line-pack:center;align-content:center;margin-top:8px}";

const PnColors$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
  }
  render() {
    return (h("div", { class: "colors" }, h("h1", null, "Colors"), h("div", { class: "palette-container" }, Object.entries(colors).map(([name, rgb]) => (h("div", { class: "color-palette" }, h("div", { class: "color-swatch", style: { backgroundColor: rgb } }), h("h4", { class: "color-name" }, name), h("p", { class: "color-rg" }, rgb)))))));
  }
  static get style() { return pnColorsCss; }
}, [0, "pn-colors"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["pn-colors"];
  components.forEach(tagName => { switch (tagName) {
    case "pn-colors":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, PnColors$1);
      }
      break;
  } });
}

const PnColors = PnColors$1;
const defineCustomElement = defineCustomElement$1;

export { PnColors, defineCustomElement };
