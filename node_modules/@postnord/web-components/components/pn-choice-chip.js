import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const pnChoiceChipCss = "pn-choice-chip{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:none;display:inline-block;background:#fff;position:relative}pn-choice-chip input{opacity:0;position:absolute;top:0;left:0;pointer-events:none;margin:0;width:100%;height:100%}pn-choice-chip label{display:block;padding:0.4rem 0.8rem;border:0.1rem solid #005d92;color:#005d92;border-radius:0.8rem;text-align:center;cursor:pointer;-webkit-transition:background 0.2s, -webkit-box-shadow 0.1s;transition:background 0.2s, -webkit-box-shadow 0.1s;transition:box-shadow 0.1s, background 0.2s;transition:box-shadow 0.1s, background 0.2s, -webkit-box-shadow 0.1s}pn-choice-chip input[type=checkbox]:checked+label.pn-choice-chip,pn-choice-chip input[type=checkbox]:indeterminate+label.pn-choice-chip{background:#005d92;color:#fff}pn-choice-chip input[type=checkbox]:hover+label.pn-choice-chip{background:#e0f8ff}pn-choice-chip input[type=checkbox]:focus+label.pn-choice-chip,pn-choice-chip input[type=checkbox]:active+label.pn-choice-chip{-webkit-box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #005d92;box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #005d92}pn-choice-chip input[type=checkbox]:active+label.pn-choice-chip{background:#8eddf9}pn-choice-chip input[type=checkbox]:disabled+label.pn-choice-chip{background-color:#d3cecb}pn-choice-chip input[type=checkbox]:checked+label.pn-choice-chip:hover{background:#0d234b;color:#fff}pn-choice-chip input[type=checkbox]:checked+label.pn-choice-chip:active{background:#00a0d6;border:0.1rem solid #00a0d6;color:#fff}";

const Pnchoicechip = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.disabled = false;
    this.checked = false;
    this.indeterminate = false;
  }
  handlechange() {
    this.indeterminate = false;
  }
  componentDidLoad() {
    this.checkAndSetIndeterminateState();
  }
  componentDidUpdate() {
    this.checkAndSetIndeterminateState();
  }
  checkAndSetIndeterminateState() {
    let checkbox = this.hostElement.querySelector(`#${this.choiceid}`);
    if (checkbox) {
      checkbox.indeterminate = this.indeterminate;
    }
  }
  render() {
    return (h(Host, null, h("input", { type: "checkbox", id: this.choiceid, value: this.value, name: this.name || this.choiceid, disabled: this.disabled, checked: this.checked }), h("label", { htmlFor: this.choiceid, class: "pn-choice-chip" }, h("slot", null))));
  }
  get hostElement() { return this; }
  static get style() { return pnChoiceChipCss; }
}, [4, "pn-choice-chip", {
    "value": [520],
    "name": [1],
    "choiceid": [1],
    "disabled": [4],
    "checked": [4],
    "indeterminate": [1028]
  }, [[0, "change", "handlechange"]]]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["pn-choice-chip"];
  components.forEach(tagName => { switch (tagName) {
    case "pn-choice-chip":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, Pnchoicechip);
      }
      break;
  } });
}

const PnChoiceChip = Pnchoicechip;
const defineCustomElement = defineCustomElement$1;

export { PnChoiceChip, defineCustomElement };
