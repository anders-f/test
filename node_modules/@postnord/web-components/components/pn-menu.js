import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const pnMenuCss = "";

const PnMenu$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    /** What you write in the comment block above each prop is what ends up in the description fields in the prop table in the documentation */
    this.testprop = 'test prop';
    this.disabled = false;
  }
  render() {
    return (h("h1", null, this.testprop));
  }
  static get style() { return pnMenuCss; }
}, [0, "pn-menu", {
    "testprop": [1],
    "disabled": [4]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["pn-menu"];
  components.forEach(tagName => { switch (tagName) {
    case "pn-menu":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, PnMenu$1);
      }
      break;
  } });
}

const PnMenu = PnMenu$1;
const defineCustomElement = defineCustomElement$1;

export { PnMenu, defineCustomElement };
