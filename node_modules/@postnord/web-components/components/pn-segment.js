import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { d as defineCustomElement$2 } from './pn-icon2.js';

const pnSegmentCss = "pn-segment{position:relative;color:#005d92;margin-right:0.5em;z-index:2;white-space:nowrap;scroll-snap-align:center;outline:none;-webkit-tap-highlight-color:transparent;-webkit-transform:translateZ(0);transform:translateZ(0)}pn-segment:last-of-type{margin-right:0}pn-segment input{margin:0;padding:0;opacity:0;position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}pn-segment label{height:100%;width:100%;padding:0.5em;border-radius:3em;font-weight:500;border:0.1rem solid transparent;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;cursor:pointer;-webkit-transition:background 0.15s, border 0.15s, color 0.15s, -webkit-box-shadow 0.15s 0.2s;transition:background 0.15s, border 0.15s, color 0.15s, -webkit-box-shadow 0.15s 0.2s;transition:background 0.15s, border 0.15s, box-shadow 0.15s 0.2s, color 0.15s;transition:background 0.15s, border 0.15s, box-shadow 0.15s 0.2s, color 0.15s, -webkit-box-shadow 0.15s 0.2s}pn-segment label>pn-icon{margin-right:0.5em}pn-segment label pn-icon svg path{-webkit-transition:fill 0.15s;transition:fill 0.15s}";

const PnSegment$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
  }
  render() {
    return (h(Host, { tabindex: "-1" }, h("input", { class: "pn-segment", id: this.segmentid, name: this.name, checked: this.selected, type: "radio", value: this.value }), h("label", { htmlFor: this.segmentid, class: "pn-segment-label" }, this.icon && h("pn-icon", { symbol: this.icon, color: "blue700" }), h("slot", null))));
  }
  get hostElement() { return this; }
  static get style() { return pnSegmentCss; }
}, [4, "pn-segment", {
    "segmentid": [1],
    "name": [1],
    "value": [1],
    "selected": [4],
    "icon": [1]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["pn-segment", "pn-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "pn-segment":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, PnSegment$1);
      }
      break;
    case "pn-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}

const PnSegment = PnSegment$1;
const defineCustomElement = defineCustomElement$1;

export { PnSegment, defineCustomElement };
