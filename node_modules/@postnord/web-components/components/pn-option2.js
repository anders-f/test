import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { d as defineCustomElement$1 } from './pn-checkbox2.js';

const pnOptionCss = "pn-option{outline:none;background:#fff;color:black;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;overflow-wrap:break-word}pn-option .pn-option-content{max-width:100%}pn-option pn-checkbox{margin-right:0.5em}pn-option:hover,pn-option:focus{background-color:#e0f8ff}pn-option:focus{-webkit-box-shadow:0 0.1rem 0 0 #005d92, 0 -0.1rem 0 0 #005d92;box-shadow:0 0.1rem 0 0 #005d92, 0 -0.1rem 0 0 #005d92}";

const PnOption = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.selectOption = createEvent(this, "selectOption", 7);
    this.checkchange = createEvent(this, "checkchange", 3);
    this.selected = false;
    this.selectHasLoaded = false;
    this.parentValue = null;
    this.checked = false;
    this.checkbox = false;
    this.index = null;
  }
  changeHandler(e) {
    this.checked = e.target.checked;
  }
  componentDidLoad() {
    this.registerEventHandlers();
  }
  componentDidUpdate() {
    if (this.selected || this.value === this.parentValue) {
      this.selectOption.emit(this.value);
    }
    this.checkchange.emit(this.checked);
  }
  registerEventHandlers() {
    const events = ['click', 'keydown'];
    const codes = ['Enter', 'Space'];
    events.forEach(e => {
      this.hostElement.addEventListener(e, ev => {
        if (ev.type === 'click' || codes.includes(ev.code)) {
          if (ev.type === 'keydown')
            ev.preventDefault();
          if (this.checkbox) {
            this.checked = !this.checked;
          }
          else {
            this.selected = true;
          }
        }
      });
    });
  }
  render() {
    return (h(Host, { tabindex: "-1" }, this.checkbox ? (h("pn-checkbox", { checkboxid: `id-${this.index}-${this.value}`, onChange: e => this.changeHandler(e), checked: this.checked })) : (''), h("div", { class: "pn-option-content" }, h("slot", null))));
  }
  get hostElement() { return this; }
  static get style() { return pnOptionCss; }
}, [4, "pn-option", {
    "value": [1],
    "selected": [1540],
    "selectHasLoaded": [4, "select-has-loaded"],
    "parentValue": [8, "parent-value"],
    "checked": [1028],
    "checkbox": [4],
    "index": [1]
  }, [[0, "change", "changeHandler"]]]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["pn-option", "pn-checkbox"];
  components.forEach(tagName => { switch (tagName) {
    case "pn-option":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, PnOption);
      }
      break;
    case "pn-checkbox":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { PnOption as P, defineCustomElement as d };
