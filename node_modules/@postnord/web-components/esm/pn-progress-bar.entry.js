import { r as registerInstance, h, g as getElement } from './index-970cd8af.js';

const pnProgressBarCss = "pn-progress-bar{display:inline;overflow:hidden}pn-progress-bar .pn-progress-container{margin:16px 16px 8px 0;display:inline-block;min-width:380px}pn-progress-bar .pn-progress-container .pn-progress-label{height:20px;color:#1e1e1e;font-size:14px;font-weight:bold;line-height:20px;margin-bottom:8px;overflow:hidden;text-overflow:ellipsis}pn-progress-bar .pn-progress-container .pn-progress-label>pn-spinner{vertical-align:middle;margin-left:5px}pn-progress-bar .pn-progress-container .pn-progress-bar{position:relative;padding-top:1px}pn-progress-bar .pn-progress-container .pn-progress-bar .pn-progress-bar-line{width:0;position:absolute;top:0;-webkit-transition:all 0.3s ease-out;transition:all 0.3s ease-out}pn-progress-bar .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line1,pn-progress-bar .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line2{width:100%;height:7px}pn-progress-bar .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line1{background-color:#8eddf9}pn-progress-bar .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line2{background-color:#00a0d6}pn-progress-bar .pn-progress-container .pn-progress-bar .pn-progress-bar-bg{height:12px;background-color:#d3cecb}pn-progress-bar .pn-progress-container .pn-progress-percentage{margin-top:5px;text-align:right;font-size:12px;line-height:16px;color:#00a0d6}pn-progress-bar.pn-progress-size-small .pn-progress-container .pn-progress-bar .pn-progress-bar-line1,pn-progress-bar.pn-progress-size-small .pn-progress-container .pn-progress-bar .pn-progress-bar-line2{height:4px}pn-progress-bar.pn-progress-size-small .pn-progress-container .pn-progress-bar .pn-progress-bar-bg{height:6px}pn-progress-bar.pn-progress-color-success .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line1{background-color:#5ec584}pn-progress-bar.pn-progress-color-success .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line2{background-color:#005e41}pn-progress-bar.pn-progress-color-error .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line1{background-color:#a70707}pn-progress-bar.pn-progress-color-error .pn-progress-container .pn-progress-bar .pn-progress-bar-line .pn-progress-bar-line2{background-color:#a70707}";

const PnSpinner = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.progress = 0;
    this.size = 'medium';
    this.color = 'default';
    this.width = '300px';
    this.label = null;
    this.showSpinner = false;
    this.showPercentage = false;
  }
  render() {
    const progress = this.progress !== undefined ? this.progress : 0;
    const progressWidth = progress < 100 ? Math.ceil(progress) : 100;
    const progressStyles = {
      width: progressWidth.toString() + '%',
    };
    const styles = {
      width: this.width || '300px',
    };
    const sizes = ['medium', 'small'];
    const size = !!~sizes.indexOf(this.size) ? this.size : 'medium';
    this.hostElement.classList.add('pn-progress-size-' + size);
    const colors = ['default', 'success', 'error'];
    const color = !!~colors.indexOf(this.color) ? this.color : 'default';
    this.hostElement.classList.add('pn-progress-color-' + color);
    if (this.showPercentage) {
      this.hostElement.classList.add('pn-progress-show-percentage');
    }
    return (h("div", { class: "pn-progress-container", style: styles }, this._hasLabel() ? (h("div", { class: "pn-progress-label" }, this.label, this.showSpinner ? h("pn-spinner", null) : null)) : null, h("div", { class: "pn-progress-bar" }, h("div", { class: "pn-progress-bar-line", style: progressStyles }, h("div", { class: "pn-progress-bar-line1" }), h("div", { class: "pn-progress-bar-line2" })), h("div", { class: "pn-progress-bar-bg" })), this.showPercentage ? (h("div", { class: "pn-progress-percentage", style: progressStyles }, progress, "%")) : null));
  }
  _hasLabel() {
    return this.label && this.label !== '';
  }
  get hostElement() { return getElement(this); }
};
PnSpinner.style = pnProgressBarCss;

export { PnSpinner as pn_progress_bar };
