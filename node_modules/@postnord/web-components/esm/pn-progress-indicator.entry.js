import { r as registerInstance, c as createEvent, h, g as getElement } from './index-970cd8af.js';

const pnProgressIndicatorCss = ".pn-progress-indicator{display:-ms-flexbox;display:flex;padding:2.8em 1em 0}";

const PnProgressIndicator = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.progresschange = createEvent(this, "progresschange", 7);
    /** Takes the index of the active step */
    this.activeStep = 0;
  }
  setActiveStepHandler({ detail }) {
    this.activeStep = detail;
    this.progresschange.emit(this.activeStep);
  }
  componentWillLoad() {
    this.passPropsToChildren();
  }
  componentDidUpdate() {
    this.passPropsToChildren();
  }
  passPropsToChildren() {
    let children = Array.from(this.hostElement.querySelectorAll('pn-progress-indicator-step'));
    children.forEach((child, i) => {
      child.activeStep = this.activeStep;
      child.index = i;
    });
  }
  render() {
    return (h("div", { class: "pn-progress-indicator" }, h("slot", null)));
  }
  get hostElement() { return getElement(this); }
};
PnProgressIndicator.style = pnProgressIndicatorCss;

export { PnProgressIndicator as pn_progress_indicator };
