import { r as registerInstance, h } from './index-970cd8af.js';
import { a as allIcons } from './icons-93101ec0.js';
import { c as colors } from './colors-dad016c3.js';

const pnIconGridCss = "#sb-addon-centered-wrapper{background-color:#f2f2f2}.sb-show-main{background-color:#f2f2f2}.icon-grid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;margin:5rem auto;width:100%;display:grid;grid-template-columns:repeat(auto-fill, 17rem);grid-gap:5rem;max-width:120rem}.icon-grid .icon{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border-radius:2.5rem;background-color:#f2f2f2;-webkit-box-shadow:0px -6px 10px white, 0px 4px 15px rgba(0, 0, 0, 0.15);box-shadow:0px -6px 10px white, 0px 4px 15px rgba(0, 0, 0, 0.15);height:14rem;position:relative;cursor:pointer;overflow:hidden}.icon-grid .icon:after{content:\"\";position:absolute;left:0;top:0;width:100%;height:100%;z-index:2;-webkit-transition:all 0.1s cubic-bezier(0.64, 0.01, 0.67, 0.92);transition:all 0.1s cubic-bezier(0.64, 0.01, 0.67, 0.92)}.icon-grid .icon.active{-webkit-box-shadow:0 15px 20px rgba(0, 0, 0, 0.02);box-shadow:0 15px 20px rgba(0, 0, 0, 0.02)}.icon-grid .icon.active:after{-webkit-box-shadow:inset 0px -2px 5px white, inset 0px 2px 5px rgba(0, 0, 0, 0.15);box-shadow:inset 0px -2px 5px white, inset 0px 2px 5px rgba(0, 0, 0, 0.15)}.icon-grid .icon span{position:absolute;top:1.5rem;right:1.5rem;color:#5e554a;font-size:0.9em}.icon-grid .icon p{position:absolute;padding:0 0.5rem 1rem;text-align:center;bottom:0.5rem;font-size:0.9em;color:#5e554a;-webkit-transition:opacity 0.2s ease, -webkit-transform 0.3s ease-in-out;transition:opacity 0.2s ease, -webkit-transform 0.3s ease-in-out;transition:transform 0.3s ease-in-out, opacity 0.2s ease;transition:transform 0.3s ease-in-out, opacity 0.2s ease, -webkit-transform 0.3s ease-in-out}.icon-grid .icon p.copy{-webkit-transform:translateY(3.5rem);transform:translateY(3.5rem);opacity:0}.icon-grid .icon:hover p.symbol-name{-webkit-transform:translateY(3.5rem);transform:translateY(3.5rem);opacity:0}.icon-grid .icon:hover p.copy{-webkit-transform:translateY(0);transform:translateY(0);opacity:1}";

const PnIconGrid = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.small = false;
    this.color = colors['grey-08-night'];
    this.activeSymbol = null;
  }
  async copySymbolName(symbolName) {
    if (!navigator.clipboard) {
      // Clipboard API not available
      return;
    }
    try {
      await navigator.clipboard.writeText(`<pn-icon symbol="${symbolName}" small="${this.small}" color="${this.color}" />`);
      this.activeSymbol = symbolName;
      setTimeout(() => {
        this.activeSymbol = null;
      }, 3000);
    }
    catch (err) {
      console.error('Failed to copy!', err);
    }
  }
  render() {
    return (h("div", { class: "icon-grid" }, Object.keys(allIcons).map((symbolName) => (h("div", { class: symbolName === this.activeSymbol ? 'active icon' : 'icon', onClick: () => this.copySymbolName(symbolName) }, symbolName === this.activeSymbol && h("span", { class: "copied" }, "Copied"), h("pn-icon", { symbol: symbolName, color: this.color, small: this.small }), h("p", { class: "symbol-name" }, symbolName), h("p", { class: "copy" }, "Click to copy"))))));
  }
};
PnIconGrid.style = pnIconGridCss;

export { PnIconGrid as pn_icon_grid };
