'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-9ec3029b.js');

const pnCheckboxCss = "pn-checkbox{display:inline-block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}pn-checkbox input{opacity:0;position:absolute}pn-checkbox input[type=checkbox]+label.pn-checkbox{width:1.5em;min-width:1.5em;height:1.5em;min-height:1.5em;background:#fff;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;position:relative;border:0.1rem solid #969087;cursor:pointer;border-radius:0.4rem;cursor:pointer;-webkit-transition-duration:220ms;transition-duration:220ms;-webkit-transition-timing-function:cubic-bezier(0.79, 0.14, 0.15, 0.86);transition-timing-function:cubic-bezier(0.79, 0.14, 0.15, 0.86);-webkit-transition-property:border, background, -webkit-box-shadow;transition-property:border, background, -webkit-box-shadow;transition-property:border, background, box-shadow;transition-property:border, background, box-shadow, -webkit-box-shadow}pn-checkbox input[type=checkbox]+label.pn-checkbox svg{width:80%;fill:none}pn-checkbox input[type=checkbox]+label.pn-checkbox svg polyline{stroke:#FFF;-webkit-transform-origin:0 0;transform-origin:0 0;stroke-linecap:round;stroke-dasharray:23;stroke-dashoffset:23;-webkit-transition-delay:none;transition-delay:none;-webkit-transition:stroke-dashoffset 180ms cubic-bezier(0.79, 0.14, 0.15, 0.86);transition:stroke-dashoffset 180ms cubic-bezier(0.79, 0.14, 0.15, 0.86)}pn-checkbox input[type=checkbox]:hover+label.pn-checkbox{border:0.1rem solid #005d92;background:#e0f8ff}pn-checkbox input[type=checkbox]:checked+label.pn-checkbox,pn-checkbox input[type=checkbox]:indeterminate+label.pn-checkbox{background:#005d92;border:0.1rem solid #005d92}pn-checkbox input[type=checkbox]:checked+label.pn-checkbox svg polyline,pn-checkbox input[type=checkbox]:indeterminate+label.pn-checkbox svg polyline{-webkit-transition-delay:220ms;transition-delay:220ms}pn-checkbox input[type=checkbox]:checked+label.pn-checkbox svg polyline.checkmark-path{stroke-dashoffset:0}pn-checkbox input[type=checkbox]:indeterminate+label.pn-checkbox svg polyline.checkmark-path{stroke-dashoffset:23}pn-checkbox input[type=checkbox]:indeterminate+label.pn-checkbox svg polyline.indeterminate-path{stroke-dashoffset:0}pn-checkbox input[type=checkbox]:focus+label.pn-checkbox,pn-checkbox input[type=checkbox]:active+label.pn-checkbox{-webkit-box-shadow:0 0 0 0.1rem white, 0 0 0 0.3rem #005d92;box-shadow:0 0 0 0.1rem white, 0 0 0 0.3rem #005d92}pn-checkbox input[type=checkbox]:disabled+label.pn-checkbox{background-color:#d3cecb;border:0.1rem solid #969087;cursor:not-allowed}pn-checkbox input[type=checkbox]:disabled+label.pn-checkbox svg polyline{stroke:#969087}pn-checkbox input[type=checkbox]:disabled:checked+label.pn-checkbox{border:0.1rem solid transparent}pn-checkbox input[type=checkbox]:disabled:active+label.pn-checkbox{-webkit-box-shadow:none;box-shadow:none}";

const PnCheckbox = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.disabled = false;
    this.checked = false;
    this.indeterminate = false;
    this.ariaLabel = null;
    this.ariaDescribedby = null;
  }
  handlechange() {
    this.indeterminate = false;
  }
  componentDidLoad() {
    this.checkAndSetIndeterminateState();
  }
  componentDidUpdate() {
    this.checkAndSetIndeterminateState();
  }
  checkAndSetIndeterminateState() {
    let checkbox = this.hostElement.querySelector(`#${this.checkboxid}`);
    if (checkbox) {
      checkbox.indeterminate = this.indeterminate;
    }
  }
  render() {
    return (index.h(index.Host, null, index.h("input", { type: "checkbox", id: this.checkboxid, value: this.value, name: this.name || this.checkboxid, disabled: this.disabled, checked: this.checked, "aria-describedby": this.ariaDescribedby }), index.h("label", { htmlFor: this.checkboxid, class: "pn-checkbox" }, index.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "none" }, index.h("polyline", { class: "checkmark-path", points: "4,12 9,17 20,6", "stroke-width": "3" }), index.h("polyline", { class: "indeterminate-path", points: "4,12 20,12", "stroke-width": "3" })))));
  }
  get hostElement() { return index.getElement(this); }
};
PnCheckbox.style = pnCheckboxCss;

exports.pn_checkbox = PnCheckbox;
