'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-9ec3029b.js');
const icons = require('./icons-1311e97f.js');
const colors = require('./colors-b857e3bc.js');

const pnIconCss = "pn-icon{display:inline-block;vertical-align:top}pn-icon svg{display:block;height:1.5em;width:1.5em}pn-icon.small svg{height:1em;width:1em}";

const PnIcon = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    /** The name of the icon you want to use */
    this.symbol = null;
    /** Medium is default but you can pass "small" for a 16x16 icon */
    this.small = false;
    /** Check for the available colors in the knobs panel in the story */
    this.color = 'black';
  }
  getIcon() {
    // The replace is just setting the fill attribute on the SVG to the color passed to the component
    return (icons.allIcons[this.symbol] || '').replace(/black/g, colors.colors[this.color]);
  }
  render() {
    return index.h(index.Host, { class: `pn-icon ${this.small ? 'small' : ''}`, innerHTML: this.getIcon() });
  }
};
PnIcon.style = pnIconCss;

exports.pn_icon = PnIcon;
