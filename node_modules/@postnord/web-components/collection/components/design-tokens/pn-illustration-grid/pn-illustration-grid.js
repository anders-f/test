import { Component, Prop, h, State } from '@stencil/core';
import allIllustrations from '../../../assets/illustrations';
import colors from '../../../assets/colors';
export class PnIllustrationGrid {
  constructor() {
    this.size = 'medium';
    this.color = colors['postnord-default'];
    this.activeIllustration = null;
  }
  async copyIllustrationName(illustrationName) {
    if (!navigator.clipboard) {
      // Clipboard API not available
      return;
    }
    try {
      await navigator.clipboard.writeText(`<pn-illustration illustration="${illustrationName}" />`);
      this.activeIllustration = illustrationName;
      setTimeout(() => {
        this.activeIllustration = null;
      }, 3000);
    }
    catch (err) {
      console.error('Failed to copy!', err);
    }
  }
  render() {
    return (h("div", { class: "illustration-grid" }, Object.keys(allIllustrations).map((illustrationName) => (h("div", { class: illustrationName === this.activeIllustration ? 'active illustration' : 'illustration', onClick: () => this.copyIllustrationName(illustrationName) },
      illustrationName === this.activeIllustration && h("span", { class: "copied" }, "Copied"),
      h("pn-illustration", { illustration: illustrationName }),
      h("p", { class: "illustration-name" }, illustrationName),
      h("p", { class: "copy" }, "Click to copy"))))));
  }
  static get is() { return "pn-illustration-grid"; }
  static get originalStyleUrls() { return {
    "$": ["pn-illustration-grid.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-illustration-grid.css"]
  }; }
  static get properties() { return {
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "size",
      "reflect": false,
      "defaultValue": "'medium'"
    },
    "color": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "color",
      "reflect": false,
      "defaultValue": "colors['postnord-default']"
    }
  }; }
  static get states() { return {
    "activeIllustration": {}
  }; }
}
