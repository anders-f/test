import { Component, Element, Prop, h, Host } from '@stencil/core';
export class PnSpinner {
  constructor() {
    /** Light version of the spinner */
    this.light = false;
    /** Size in em */
    this.size = '1.5';
  }
  render() {
    return (h(Host, { class: this.light ? 'light' : '', style: { '--size': this.size + 'em' } },
      h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "none" },
        h("circle", { class: "circle", cx: "12", cy: "12", r: "10", "stroke-width": "3" }),
        h("circle", { class: "dot", cx: "21.3", cy: "16", r: "1.48" }))));
  }
  static get is() { return "pn-spinner"; }
  static get originalStyleUrls() { return {
    "$": ["pn-spinner.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-spinner.css"]
  }; }
  static get properties() { return {
    "light": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Light version of the spinner"
      },
      "attribute": "light",
      "reflect": false,
      "defaultValue": "false"
    },
    "size": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Size in em"
      },
      "attribute": "size",
      "reflect": false,
      "defaultValue": "'1.5'"
    }
  }; }
  static get elementRef() { return "hostElement"; }
}
