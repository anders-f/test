import { Component, Prop, h, Host } from '@stencil/core';
export class PnradioButton {
  constructor() {
    this.disabled = false;
    this.checked = false;
  }
  render() {
    return (h(Host, null,
      h("input", { type: "radio", id: this.radioid || this.value, value: this.value, name: this.name, disabled: this.disabled, checked: this.checked }),
      h("label", { htmlFor: this.radioid || this.value },
        h("div", { class: "pn-radio-outer" },
          h("div", { class: "pn-radio-inner" })))));
  }
  static get is() { return "pn-radio-button"; }
  static get originalStyleUrls() { return {
    "$": ["pn-radio-button.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-radio-button.css"]
  }; }
  static get properties() { return {
    "value": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "This will be emitted on change and input, like a native radio button"
      },
      "attribute": "value",
      "reflect": true
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The name of the radio button group that will hold this button, like a native radio button"
      },
      "attribute": "name",
      "reflect": false
    },
    "radioid": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The string you put here will be what you'd make the ID of a native radio button, you can't name props \"id\" because it's reserved\nso we went with the more descriptive name \"radioid\", if you want to create labels for your button, you will bind it to this ID"
      },
      "attribute": "radioid",
      "reflect": false
    },
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "disabled",
      "reflect": false,
      "defaultValue": "false"
    },
    "checked": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checked",
      "reflect": false,
      "defaultValue": "false"
    }
  }; }
}
