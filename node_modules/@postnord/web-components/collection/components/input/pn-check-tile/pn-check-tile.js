import { Component, Prop, h, Host, Element } from '@stencil/core';
export class PnCheckTile {
  constructor() {
    this.checked = false;
    this.slottedIllustration = false;
  }
  componentWillLoad() {
    this.slottedIllustration = !!this.hostElement.querySelector('[slot="illustration"]');
  }
  render() {
    return (h(Host, null,
      h("input", { type: "checkbox", id: this.checkboxid, checked: this.checked }),
      h("label", { htmlFor: this.checkboxid },
        this.illustration && !this.slottedIllustration && (h("pn-illustration", { illustration: this.illustration })),
        h("slot", { name: "illustration" }),
        h("span", { class: "pn-check-tile-content" },
          h("slot", null),
          h("svg", { class: "pn-check-tile-checkmark", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "none" },
            h("polyline", { class: "checkmark-path-checked", points: "4,12 9,17 20,6", "stroke-width": "4" }))))));
  }
  static get is() { return "pn-check-tile"; }
  static get originalStyleUrls() { return {
    "$": ["pn-check-tile.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-check-tile.css"]
  }; }
  static get properties() { return {
    "checkboxid": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "REQUIRED!"
      },
      "attribute": "checkboxid",
      "reflect": false
    },
    "value": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "This will be emitted on change and input"
      },
      "attribute": "value",
      "reflect": false
    },
    "checked": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checked",
      "reflect": false,
      "defaultValue": "false"
    },
    "illustration": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "You can pass an illustration name, but if you want to pass your own image you can add an image as a slot with the name of \"illustration\", check the \"tile with slot\" story."
      },
      "attribute": "illustration",
      "reflect": false
    }
  }; }
  static get elementRef() { return "hostElement"; }
}
