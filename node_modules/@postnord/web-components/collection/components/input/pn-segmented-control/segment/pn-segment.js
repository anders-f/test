import { Component, Element, Prop, h, Host } from '@stencil/core';
export class PnSegment {
  render() {
    return (h(Host, { tabindex: "-1" },
      h("input", { class: "pn-segment", id: this.segmentid, name: this.name, checked: this.selected, type: "radio", value: this.value }),
      h("label", { htmlFor: this.segmentid, class: "pn-segment-label" },
        this.icon && h("pn-icon", { symbol: this.icon, color: "blue700" }),
        h("slot", null))));
  }
  static get is() { return "pn-segment"; }
  static get originalStyleUrls() { return {
    "$": ["pn-segment.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-segment.css"]
  }; }
  static get properties() { return {
    "segmentid": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "segmentid",
      "reflect": false
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "name",
      "reflect": false
    },
    "value": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "value",
      "reflect": false
    },
    "selected": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "selected",
      "reflect": false
    },
    "icon": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "icon",
      "reflect": false
    }
  }; }
  static get elementRef() { return "hostElement"; }
}
