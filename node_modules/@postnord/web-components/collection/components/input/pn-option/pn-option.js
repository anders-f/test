import { Component, Prop, h, Host, Event, Element, Listen } from '@stencil/core';
export class PnOption {
  constructor() {
    this.selected = false;
    this.selectHasLoaded = false;
    this.parentValue = null;
    this.checked = false;
    this.checkbox = false;
    this.index = null;
  }
  changeHandler(e) {
    this.checked = e.target.checked;
  }
  componentDidLoad() {
    this.registerEventHandlers();
  }
  componentDidUpdate() {
    if (this.selected || this.value === this.parentValue) {
      this.selectOption.emit(this.value);
    }
    this.checkchange.emit(this.checked);
  }
  registerEventHandlers() {
    const events = ['click', 'keydown'];
    const codes = ['Enter', 'Space'];
    events.forEach(e => {
      this.hostElement.addEventListener(e, ev => {
        if (ev.type === 'click' || codes.includes(ev.code)) {
          if (ev.type === 'keydown')
            ev.preventDefault();
          if (this.checkbox) {
            this.checked = !this.checked;
          }
          else {
            this.selected = true;
          }
        }
      });
    });
  }
  render() {
    return (h(Host, { tabindex: "-1" },
      this.checkbox ? (h("pn-checkbox", { checkboxid: `id-${this.index}-${this.value}`, onChange: e => this.changeHandler(e), checked: this.checked })) : (''),
      h("div", { class: "pn-option-content" },
        h("slot", null))));
  }
  static get is() { return "pn-option"; }
  static get originalStyleUrls() { return {
    "$": ["pn-option.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-option.css"]
  }; }
  static get properties() { return {
    "value": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "value",
      "reflect": false
    },
    "selected": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "selected",
      "reflect": true,
      "defaultValue": "false"
    },
    "selectHasLoaded": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "select-has-loaded",
      "reflect": false,
      "defaultValue": "false"
    },
    "parentValue": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "parent-value",
      "reflect": false,
      "defaultValue": "null"
    },
    "checked": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checked",
      "reflect": false,
      "defaultValue": "false"
    },
    "checkbox": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checkbox",
      "reflect": false,
      "defaultValue": "false"
    },
    "index": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "index",
      "reflect": false,
      "defaultValue": "null"
    }
  }; }
  static get events() { return [{
      "method": "selectOption",
      "name": "selectOption",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "This event is solely here to communicate with pn-select, listen for changes on pn-select rather than here"
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }, {
      "method": "checkchange",
      "name": "checkchange",
      "bubbles": false,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": "If you have checkboxes on your options and want to bind the value on change, listen for this event on the pn-options themselves"
      },
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      }
    }]; }
  static get elementRef() { return "hostElement"; }
  static get listeners() { return [{
      "name": "change",
      "method": "changeHandler",
      "target": undefined,
      "capture": false,
      "passive": false
    }]; }
}
