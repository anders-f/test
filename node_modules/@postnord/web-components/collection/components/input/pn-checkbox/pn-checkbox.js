import { Component, Prop, h, Host, Element, Listen } from '@stencil/core';
export class PnCheckbox {
  constructor() {
    this.disabled = false;
    this.checked = false;
    this.indeterminate = false;
    this.ariaLabel = null;
    this.ariaDescribedby = null;
  }
  handlechange() {
    this.indeterminate = false;
  }
  componentDidLoad() {
    this.checkAndSetIndeterminateState();
  }
  componentDidUpdate() {
    this.checkAndSetIndeterminateState();
  }
  checkAndSetIndeterminateState() {
    let checkbox = this.hostElement.querySelector(`#${this.checkboxid}`);
    if (checkbox) {
      checkbox.indeterminate = this.indeterminate;
    }
  }
  render() {
    return (h(Host, null,
      h("input", { type: "checkbox", id: this.checkboxid, value: this.value, name: this.name || this.checkboxid, disabled: this.disabled, checked: this.checked, "aria-describedby": this.ariaDescribedby }),
      h("label", { htmlFor: this.checkboxid, class: "pn-checkbox" },
        h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "none" },
          h("polyline", { class: "checkmark-path", points: "4,12 9,17 20,6", "stroke-width": "3" }),
          h("polyline", { class: "indeterminate-path", points: "4,12 20,12", "stroke-width": "3" })))));
  }
  static get is() { return "pn-checkbox"; }
  static get originalStyleUrls() { return {
    "$": ["pn-checkbox.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-checkbox.css"]
  }; }
  static get properties() { return {
    "value": {
      "type": "any",
      "mutable": false,
      "complexType": {
        "original": "any",
        "resolved": "any",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "This will be emitted on change and input, like a native checkbox"
      },
      "attribute": "value",
      "reflect": true
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The name of the checkbox group"
      },
      "attribute": "name",
      "reflect": false
    },
    "checkboxid": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The string you put here will be what you'd make the ID of a native radio button, you can't name props \"id\" because it's reserved\nso we went with the more descriptive name \"checkboxid\", if you want to create labels for your checkbox, you will bind it to this ID"
      },
      "attribute": "checkboxid",
      "reflect": false
    },
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "disabled",
      "reflect": false,
      "defaultValue": "false"
    },
    "checked": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checked",
      "reflect": false,
      "defaultValue": "false"
    },
    "indeterminate": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "indeterminate",
      "reflect": false,
      "defaultValue": "false"
    },
    "ariaLabel": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "aria-label",
      "reflect": false,
      "defaultValue": "null"
    },
    "ariaDescribedby": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "aria-describedby",
      "reflect": false,
      "defaultValue": "null"
    }
  }; }
  static get elementRef() { return "hostElement"; }
  static get listeners() { return [{
      "name": "change",
      "method": "handlechange",
      "target": undefined,
      "capture": false,
      "passive": false
    }]; }
}
