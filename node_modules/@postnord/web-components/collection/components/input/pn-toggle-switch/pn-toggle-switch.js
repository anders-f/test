import { Component, Element, Prop, h, Host } from '@stencil/core';
export class PnToggleSwitch {
  constructor() {
    this.checked = false;
    this.disabled = false;
    /** Loading state */
    this.indeterminate = false;
    this.name = null;
  }
  componentDidUpdate() {
    this.checkIndeterminateState();
  }
  componentDidLoad() {
    this.checkIndeterminateState();
  }
  checkIndeterminateState() {
    const toggleSwitch = this.hostElement.querySelector(`#${this.toggleid}`);
    if (toggleSwitch)
      toggleSwitch.indeterminate = this.indeterminate;
  }
  render() {
    return (h(Host, null,
      h("input", { id: this.toggleid, name: this.name || this.toggleid, type: "checkbox", checked: this.checked, class: "pn-toggle-switch", disabled: this.disabled }),
      h("label", { htmlFor: this.toggleid, class: "pn-toggle" },
        h("div", { class: "bg" }),
        h("div", { class: "circle" },
          h("pn-spinner", null)))));
  }
  static get is() { return "pn-toggle-switch"; }
  static get originalStyleUrls() { return {
    "$": ["pn-toggle-switch.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["pn-toggle-switch.css"]
  }; }
  static get properties() { return {
    "checked": {
      "type": "boolean",
      "mutable": true,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "checked",
      "reflect": false,
      "defaultValue": "false"
    },
    "disabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "disabled",
      "reflect": false,
      "defaultValue": "false"
    },
    "indeterminate": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": "Loading state"
      },
      "attribute": "indeterminate",
      "reflect": false,
      "defaultValue": "false"
    },
    "toggleid": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Required!"
      },
      "attribute": "toggleid",
      "reflect": false
    },
    "name": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "name",
      "reflect": false,
      "defaultValue": "null"
    }
  }; }
  static get elementRef() { return "hostElement"; }
}
