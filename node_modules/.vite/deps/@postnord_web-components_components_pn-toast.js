import {
  defineCustomElement
} from "./chunk-RNU2R32L.js";
import "./chunk-JZ2JPFCN.js";
import {
  H,
  Host,
  createEvent,
  h,
  proxyCustomElement
} from "./chunk-BSVAQH77.js";
import "./chunk-TFWDKVI3.js";

// node_modules/@postnord/web-components/components/pn-toast.js
var pnToastCss = "pn-toast.pn-toast{color:#000;padding:1em;border:0.1rem solid #005d92;border-radius:0.8rem;outline:none;font-size:1em;font-weight:400;background:#e0f8ff;display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:start;align-items:flex-start;opacity:1;visibility:visible;-webkit-transition:visibility 0s linear 0s, opacity 0.35s, -webkit-box-shadow 0.2s;transition:visibility 0s linear 0s, opacity 0.35s, -webkit-box-shadow 0.2s;transition:visibility 0s linear 0s, opacity 0.35s, box-shadow 0.2s;transition:visibility 0s linear 0s, opacity 0.35s, box-shadow 0.2s, -webkit-box-shadow 0.2s;z-index:10;}pn-toast.pn-toast[data-hidden]{opacity:0;visibility:hidden;-webkit-transition:visibility 0s linear 0.35s, opacity 0.35s, -webkit-box-shadow 0.2s;transition:visibility 0s linear 0.35s, opacity 0.35s, -webkit-box-shadow 0.2s;transition:visibility 0s linear 0.35s, opacity 0.35s, box-shadow 0.2s;transition:visibility 0s linear 0.35s, opacity 0.35s, box-shadow 0.2s, -webkit-box-shadow 0.2s}pn-toast.pn-toast pn-icon svg path{fill:#005d92;-webkit-transition:fill 0.3s;transition:fill 0.3s}pn-toast.pn-toast>.content{margin-right:0.5em;-ms-flex-item-align:center;align-self:center}pn-toast.pn-toast>pn-icon{margin-right:0.5em}pn-toast.pn-toast button{cursor:pointer;border-radius:50%;border:none;background:none;padding:0.1em;font-size:1.2em;margin-left:auto;outline:none;-webkit-transition:background 0.2s, -webkit-box-shadow 0.2s;transition:background 0.2s, -webkit-box-shadow 0.2s;transition:background 0.2s, box-shadow 0.2s;transition:background 0.2s, box-shadow 0.2s, -webkit-box-shadow 0.2s;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}pn-toast.pn-toast button:hover{background:#8eddf9}pn-toast.pn-toast button:focus{background:#8eddf9;-webkit-box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #005d92;box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #005d92}pn-toast.pn-toast.pn-toast-warning{border:0.1rem solid #a70707;background:#fdefee}pn-toast.pn-toast.pn-toast-warning button:hover{background:#fbc2c1}pn-toast.pn-toast.pn-toast-warning button:focus{background:#fbc2c1;-webkit-box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #a70707;box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #a70707}pn-toast.pn-toast.pn-toast-warning pn-icon svg path{fill:#a70707;-webkit-transition:fill 0.3s;transition:fill 0.3s}pn-toast.pn-toast.pn-toast-success{border:0.1rem solid #005e41;background:#dcf6e7}pn-toast.pn-toast.pn-toast-success button:focus{background:#abe3bb;-webkit-box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #005e41;box-shadow:0 0 0 0.2rem #fff, 0 0 0 0.4rem #005e41}pn-toast.pn-toast.pn-toast-success button:hover{background:#abe3bb}pn-toast.pn-toast.pn-toast-success pn-icon svg path{fill:#005e41;-webkit-transition:fill 0.3s;transition:fill 0.3s}pn-toast.pn-toast.pn-toast-temporary{-webkit-box-shadow:0px 1.2px 3.6px rgba(0, 0, 0, 0.1), 0px 6.4px 14.4px rgba(0, 0, 0, 0.13);box-shadow:0px 1.2px 3.6px rgba(0, 0, 0, 0.1), 0px 6.4px 14.4px rgba(0, 0, 0, 0.13)}";
var Pntoast = proxyCustomElement(class extends H {
  constructor() {
    super();
    this.__registerHost();
    this.close = createEvent(this, "close", 7);
    this.icon = null;
    this.closable = true;
    this.temporary = false;
    this.hidden = false;
  }
  componentDidLoad() {
    if (this.temporary) {
      const content = this.hostElement.querySelector(".content");
      const readingTime = content.textContent.split(" ").length / 4 * 1e3;
      this.hidden = true;
      this.timer = readingTime > 3e3 ? readingTime : 3e3;
      if (this.manualDuration)
        this.timer = this.manualDuration;
      this.closable = this.timer > 6e3;
    }
  }
  visibilityHandler() {
    if (!this.temporary)
      return;
    if (this.timeout && this.hidden) {
      clearTimeout(this.timeout);
      return;
    }
    this.timeout = setTimeout(() => {
      this.closeToast();
    }, this.timer);
  }
  closeToast() {
    this.hidden = true;
    this.close.emit();
  }
  getClassNames() {
    let classNames = "pn-toast ";
    if (this.appearance)
      classNames += `pn-toast-${this.appearance} `;
    if (this.temporary)
      classNames += `pn-toast-temporary `;
    return classNames;
  }
  render() {
    return h(Host, { "data-hidden": this.hidden, class: this.getClassNames() }, this.icon && h("pn-icon", { symbol: this.icon }), h("div", { class: "content" }, h("slot", null)), this.closable && h("button", { onClick: () => this.closeToast(), type: "button", title: "close", "aria-label": "close" }, h("pn-icon", { symbol: "close", small: true })));
  }
  get hostElement() {
    return this;
  }
  static get watchers() {
    return {
      "hidden": ["visibilityHandler"]
    };
  }
  static get style() {
    return pnToastCss;
  }
}, [4, "pn-toast", {
  "appearance": [1],
  "icon": [1],
  "closable": [4],
  "temporary": [4],
  "manualDuration": [2, "manual-duration"],
  "hidden": [1028],
  "timeout": [32]
}]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["pn-toast", "pn-icon"];
  components.forEach((tagName) => {
    switch (tagName) {
      case "pn-toast":
        if (!customElements.get(tagName)) {
          customElements.define(tagName, Pntoast);
        }
        break;
      case "pn-icon":
        if (!customElements.get(tagName)) {
          defineCustomElement();
        }
        break;
    }
  });
}
var PnToast = Pntoast;
var defineCustomElement2 = defineCustomElement$1;
export {
  PnToast,
  defineCustomElement2 as defineCustomElement
};
//# sourceMappingURL=@postnord_web-components_components_pn-toast.js.map
